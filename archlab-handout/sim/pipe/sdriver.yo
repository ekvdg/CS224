                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4b002000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f60802000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7d001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
                            | 	
0x032: 2021                 | 	rrmovq %rdx, %rcx
0x034: 6300                 | 	xorq %rax,%rax		# count = 0;
0x036: c0f1faffffffffffffff | 	iaddq  $-6, %rcx
0x040: 717201000000000000   | 	jle    anding
                            | 			 
                            | 
0x049:                      | Loop:
0x049: 50970000000000000000 | 	mrmovq	(%rdi), %r9
0x053: 50a70800000000000000 | 	mrmovq	8(%rdi), %r10
0x05d: 50b71000000000000000 | 	mrmovq	16(%rdi), %r11
0x067: 50c71800000000000000 | 	mrmovq	24(%rdi), %r12
0x071: 50d72000000000000000 | 	mrmovq	32(%rdi), %r13
0x07b: 50e72800000000000000 | 	mrmovq	40(%rdi), %r14
0x085: 40960000000000000000 | 	rmmovq	%r9, (%rsi)
0x08f: 40a60800000000000000 | 	rmmovq  %r10, 8(%rsi)
0x099: 40b61000000000000000 | 	rmmovq	%r11, 16(%rsi)
0x0a3: 40c61800000000000000 | 	rmmovq	%r12, 24(%rsi)
0x0ad: 40d62000000000000000 | 	rmmovq	%r13, 32(%rsi)
0x0b7: 40e62800000000000000 | 	rmmovq	%r14, 40(%rsi)
                            | 	
0x0c1:                      | ele1:
0x0c1: 6299                 | 	andq	%r9, %r9
0x0c3: 71d600000000000000   | 	jle	ele2
0x0cc: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x0d6:                      | ele2:
0x0d6: 62aa                 | 	andq	%r10, %r10
0x0d8: 71eb00000000000000   | 	jle 	ele3
0x0e1: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x0eb:                      | ele3:
0x0eb: 62bb                 | 	andq	%r11, %r11
0x0ed: 710001000000000000   | 	jle 	ele4
0x0f6: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x100:                      | ele4:
0x100: 62cc                 | 	andq	%r12, %r12
0x102: 711501000000000000   | 	jle	ele5
0x10b: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x115:                      | ele5:
0x115: 62dd                 | 	andq	%r13, %r13
0x117: 712a01000000000000   | 	jle	ele6
0x120: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x12a:                      | ele6:
0x12a: 62ee                 | 	andq	%r14, %r14
0x12c: 713f01000000000000   | 	jle	Npos
0x135: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 	
0x13f:                      | Npos:
0x13f: c0f73000000000000000 | 	iaddq  $48, %rdi
0x149: c0f63000000000000000 | 	iaddq  $48, %rsi
0x153: c0f1faffffffffffffff | 	iaddq  $-6, %rcx
0x15d: 754900000000000000   | 	jge    Loop
0x166: 2012                 | 	rrmovq %rcx, %rdx
0x168: c0f20600000000000000 | 	iaddq  $6, %rdx
                            | 	
0x172:                      | anding:
0x172: 6222                 | 	andq	%rdx, %rdx
0x174: 71cd01000000000000   | 	jle	Done
                            | 
0x17d:                      | loop2:
0x17d: 50a70000000000000000 | 	mrmovq	(%rdi), %r10
0x187: c0f70800000000000000 | 	iaddq	$8, %rdi
0x191: 40a60000000000000000 | 	rmmovq	%r10, (%rsi)
0x19b: 62aa                 | 	andq	%r10, %r10
0x19d: 71b001000000000000   | 	jle	Npos1
0x1a6: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x1b0:                      | Npos1:
0x1b0: c0f60800000000000000 | 	iaddq	$8, %rsi
0x1ba: c0f2ffffffffffffffff | 	iaddq	$-1, %rdx
0x1c4: 767d01000000000000   | 	jg	loop2
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1cd:                      | Done:
0x1cd: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1ce:                      | End:
                            | #/* $end ncopy-ys */
0x1ce:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1d0:                      | 	.align 8
0x1d0:                      | src:
0x1d0: 0100000000000000     | 	.quad 1
0x1d8: 0200000000000000     | 	.quad 2
0x1e0: fdffffffffffffff     | 	.quad -3
0x1e8: fcffffffffffffff     | 	.quad -4
0x1f0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x200:                      | 	.align 16
0x200:                      | Predest:
0x200: fadebc0000000000     | 	.quad 0xbcdefa
0x208:                      | dest:
0x208: abefcd0000000000     | 	.quad 0xcdefab
0x210: abefcd0000000000     | 	.quad 0xcdefab
0x218: abefcd0000000000     | 	.quad 0xcdefab
0x220: abefcd0000000000     | 	.quad 0xcdefab
0x228:                      | Postdest:
0x228: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x230:                      | .align 8
                            | # Run time stack
0x230: 0000000000000000     | 	.quad 0
0x238: 0000000000000000     | 	.quad 0
0x240: 0000000000000000     | 	.quad 0
0x248: 0000000000000000     | 	.quad 0
0x250: 0000000000000000     | 	.quad 0
0x258: 0000000000000000     | 	.quad 0
0x260: 0000000000000000     | 	.quad 0
0x268: 0000000000000000     | 	.quad 0
0x270: 0000000000000000     | 	.quad 0
0x278: 0000000000000000     | 	.quad 0
0x280: 0000000000000000     | 	.quad 0
0x288: 0000000000000000     | 	.quad 0
0x290: 0000000000000000     | 	.quad 0
0x298: 0000000000000000     | 	.quad 0
0x2a0: 0000000000000000     | 	.quad 0
0x2a8: 0000000000000000     | 	.quad 0
                            | 
0x2b0:                      | Stack:
